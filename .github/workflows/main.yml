name: Image Build

on:
  push:
    branches:
      - main
    paths-ignore:
      - notebooks/**
      - README.md

permissions:
  contents: read

jobs:
  image-build:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: us-east-1
      ECR_REPO: primepredict
      AWS_ACCOUNT_ID: 467072721756

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install unittest2
          pip install pylint

      - name: Run unit tests
        run: |
          python -m unittest unit_test/test_build_pipeline.py
          python -m unittest unit_test/test_model_evaluate.py
          python -m unittest unit_test/test_models.py

      - name: Lint
        run: |
          pylint src/pipeline/preprocessing.py --fail-under=7
          pylint src/pipeline/build_pipeline.py --fail-under=7
          pylint src/model/model_evaluate.py --fail-under=7
          pylint src/model/models.py --fail-under=7

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPO }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, and push docker image to Amazon ECR
        run: |
          IMAGE_TAG=1.1
          REGISTRY=${{ steps.login-ecr.outputs.registry }}
          REPOSITORY=primepredict

          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
        

